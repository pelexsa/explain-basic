- JRE
Java Virtual Machine

JRE 구성 요소 : JVM, Java 클래스 라이브러리, Java 클래스 로더

자바 애플리케이션을 생성하고 실행할 수 있도록 구성된 배포판
JVM과 핵심 라이브러리 및 자바 런타임 환경에서 사용하는 프로퍼티 세팅이나 리소스 파일을 가지고 있다.
개발 관련 도구는 포함하지 않는다.(JDK 제공)

- JVM
Java virtual machine(자바 가상 머신)

동작 원리
Java Application <-> JVM <-> OS(Windows) <-> 컴퓨터(하드웨어)

- OS와 붙어 있기 때문에 OS종속적
JVM이 Application을 OS에 맞게 변경해주기 때문에 OS를 고려할 필요가 없다.

- 다른 언어에 비해 느린 이유
컴파일된 상태가 아니고, 실행 시에 해석되기 때문

-자바 운영 프로그램은 운영체제, 하드웨어가 아닌 JVM 과 통신하고
JVM이 운영체제가 이해할 수 있도록 변환하여 전달.
그렇기 때문에 자바로 작성된 프로그램은 운영체제, 하드웨어 상관없이 실행 가능

JVM(Java Virtual Machine)
자바 가상 머신으로 자바 바이트 코드(.class 파일)를 OS에 특화된 코드로 변환(인터프리터와 JIT 컴파일러)하여 실행
바이트 코드를 실행하는 표준(JVM 자체는 표준)이자 구현체(특정 밴더가 구현한 JVM)다.
JVM 밴더 : 오라클, 아마존, Azul ...
특정 플랫폼에 종속적

* 가상 기계 : 소프트 웨어로 구현된 하드웨어
윈도우 운영체제에서 리눅스 운영체제를 사용 해야할때 쓰이는 virtual box 같은 개념

* 인터 프리터 : 프로그래밍 언어의 소스 코드를 바로 실행하는 컴퓨터 프로그램, 환경
한줄씩 읽어가면서 실행하는 프로그램 형식

출처 : 인프런 - 백기선님 JAVA 인강

변수 : 단 하나의 값을 저장할 수 있는 메모리 공간
변수명 : 메모리 공간에 이름을 붙여주는 것 (변수명이 가르키고 있는 주소의 데이터를 불러오기 위해 사용)
변수 타입 : 메모리의 빈 공간에 변수타입에 알맞는 크기의 저장 공간을 할당
ex) int num;  -> int형에 해당하는 4byte의 크기를 할당
변수의 초기화 : 변수를 사용하기 전에 처음으로 값을 저장하는 것

변수 명명규칙
- 대소문자가 구분되며, 길이 제한이 없다.
- 예약어를 사용해선 안 된다.
- 숫자로 시작해서는 안 된다.
- 특수문자는 '_'와 '$'만을 허용한다.

클래스 명명규칙
- 클래스의 이름 첫 글자는 항상 대문자로 한다. (변수와 메소드는 항상 첫 글자를 소문자로 한다.)
- 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 한다.
- 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_'로 구분한다.

* 유니코드를 인식 못하는 운영체제도 있기 때문에 ASCII 코드(영문자)로 클래스명을 짓는것이 좋다.

변수 타입
기본형 : 실제 값(data)를 저장 
참조형 : 어떤 값이 저장된 주소(memory address)를 값으로 갖는다.
 - 참조형 변수간의 연산은 불가능하다.
 
 메모리에는 1 byte 단위로 일련번호가 붙어있는데,
 이 번호를 메모리 주소, 주소라고 한다.
 객체의 주소는 객체가 저장된 메모리 주소를 의미
 -> int인 경우 1byte 메모리 주소값, 4byte 데이터값 = 총 5byte??
 
 새로운 클래스를 생성한다는것은 참조타입을 추가하는 것과 같다.
 Date today = new Date(); // Date 객체를 생성하여, 값에 해당하는 주소값을 today에 저장
 
 참조형 변수는 null 또는 객체의 주소(4 byte, 0x0 ~ 0xFFFFFFFF)를 값으로 갖는다.
 null은 어떤 객체의 주소도 저장되어 있지 않다.
 단,JVM이 32 bit가 아니라 64bit일경우 참조형 변수의 크기는 8 byte가 된다.
 
 기본형은 data에 따라 자료형(data type) 용어를 사용
 참조형은 항상 객체의 주소(4byte 정수)를 저장, 객체의 종류에 의해 구분, 참조형 변수의 종류를 구분할 때는 타입 용어를 사용
 
 char은 문자를 내부적으로 정수(유니코드)를 저장하므로, 정수형과 다르지 않다.
 int는 CPU가 가장 효율적으로 처리 가능 -> why? 작성
 
 기본 자료형 원시타입
 1byte = 8bit
 논리형 boolean 1byte
 문자형 char 2byte 유니코드(2 byte 문자체계 사용)
 정수형 byte 1byte, short 2byte, int 4byte, long 8byte
 실수형 float 4byte 부동 소수점(floating-point) 방식 사용, double 8byte
 
 정수형의 경우, -2(n-1승) ~ 2(n-1)승 - 1의 범위를 갖는다
 ex) int 32bit(4 byte)이므로 n에 32 대입
 
 패키지 : 클래스를 폴더 형식으로 관리하는 것
 import : 다른 패키지에 있는 클래스를 사용하기 위한 기능
 static : 정적변수, Static 변수는 클래스가 메모리에 올라갈때 자동으로 생성, 인스턴스 없이 바로 생성 가능
 메모리에 올라가서 인스턴스 없이 바로 생성 가능하기 때문에, 꼭 모든 인스턴스에서 공통으로 사용하는 변수만 써야한다.
